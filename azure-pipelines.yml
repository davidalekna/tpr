trigger: none

# For code on Github this must always be a Microsoft-hosted agent running outside our network
pool:
  vmImage: 'windows-2019'

resources:
  repositories:
    - repository: hooks
      type: git
      name: TPR/Tools-TPRGitHooks
      ref: develop

variables:
  - name: YARN_CACHE_FOLDER
    value: $(Pipeline.Workspace)/.yarn
  - group: DEV-COMMON-SECRETS

jobs:
  - job: Build_and_test
    displayName: Build and test
    steps:
      - checkout: self
      - checkout: hooks
      - template: git-secrets.steps.yml@hooks
        parameters:
          repoPath: $(Build.SourcesDirectory)\react-components

      # Node.js tool installer
      # Finds or downloads and caches the specified version spec of Node.js and adds it to the PATH
      - task: NodeTool@0
        inputs:
          versionSpec: '14.18.1'
        displayName: Set Node version

      # Be specific about which version of npm we build with
      # npm 7 or above fails with "Cannot read properties of null (reading 'matches')". Two changes separately triggered this error:
      # - removal of the "downshift" package,
      # - adding the "@tpr/govuk-react-jsx" package
      - script: npm install -g npm@6.14.15
        displayName: Set npm version

      - task: Cache@2
        inputs:
          key: 'yarn | "$(Agent.OS)" | $(Build.SourcesDirectory)/react-components/**/yarn.lock'
          restoreKeys: |
            yarn | "$(Agent.OS)"
          path: $(YARN_CACHE_FOLDER)
        displayName: Cache Yarn packages

      - task: Yarn@3
        inputs:
          projectDirectory: '$(Build.SourcesDirectory)\react-components'
          arguments: 'audit --level moderate --groups dependencies'
        displayName: yarn audit

      - task: Yarn@3
        inputs:
          projectDirectory: '$(Build.SourcesDirectory)\react-components'
          arguments: '--frozen-lockfile'
        displayName: yarn install

      - task: Yarn@3
        inputs:
          projectDirectory: '$(Build.SourcesDirectory)\react-components'
          arguments: 'build'
        displayName: yarn build

      - task: Yarn@3
        inputs:
          projectDirectory: '$(Build.SourcesDirectory)\react-components'
          arguments: test --ci --watchAll=false --reporters=jest-junit --reporters=default --coverage --coverageReporters=cobertura --testMatch "**\*.spec.[t]s?(x)"
        displayName: Run tests
        continueOnError: false # Test failures should fail the build

      - task: PublishTestResults@2
        displayName: 'Publish unit test results'
        inputs:
          testResultsFiles: junit.xml
          searchFolder: $(Build.SourcesDirectory)\react-components
          mergeTestResults: true
          testRunTitle: 'Jest Unit Tests'
          failTaskOnFailedTests: true
        condition: always()

      - task: PublishCodeCoverageResults@1
        displayName: 'Publish code coverage from Jest tests'
        inputs:
          codeCoverageTool: Cobertura
          summaryFileLocation: $(Build.SourcesDirectory)\react-components\coverage\cobertura-coverage.xml
          failIfCoverageEmpty: true

      - ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/develop') }}:
          - script: git reset --hard HEAD
            displayName: Reset file changes made by tests that would prevent deployment

          - task: Yarn@3
            inputs:
              projectDirectory: '$(Build.SourcesDirectory)\react-components'
              arguments: 'postinstall'
            displayName: yarn postinstall

          - script: echo "//registry.npmjs.org/:_authToken=$(NPM-Access-Token)" > $(Build.SourcesDirectory)\react-components\.npmrc
            displayName: Authenticate with NPM registry

          - task: Yarn@3
            inputs:
              projectDirectory: '$(Build.SourcesDirectory)\react-components'
              arguments: deploy --canary --yes --preid next --dist-tag next
            displayName: Publish packages to NPM
